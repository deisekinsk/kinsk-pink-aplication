-- To organize by PRICING_CATEGORY_ID
SELECT
    PRICING_CATEGORY_ID,
    COUNT(*) AS TOTAL
FROM
    SUBSCRIPTION
GROUP BY
    PRICING_CATEGORY_ID;

-- To organize by PRICING_CATEGORY_ID with category names
SELECT
    P.PRICING_CATEGORY_ID,
    P.NAME,
    COUNT(*) AS TOTAL
FROM
    SUBSCRIPTION S
JOIN
    PRICING_CATEGORY P ON S.PRICING_CATEGORY_ID = P.PRICING_CATEGORY_ID
GROUP BY
    P.PRICING_CATEGORY_ID, P.NAME;

-- To organize by SUBS_STATUS
SELECT
    SUBS_STATUS,
    COUNT(*) AS TOTAL
FROM
    SUBSCRIPTION
GROUP BY
    SUBS_STATUS;

-- Retrieve subscriptions with different start and last update dates, displaying status and end date.
SELECT
    START_DATE,
    LAST_UPDATE,
    SUBS_STATUS,
    END_DATE,
    COUNT(*) AS TOTAL
FROM
    SUBSCRIPTION
WHERE
    START_DATE <> LAST_UPDATE
GROUP BY
    START_DATE, LAST_UPDATE, SUBS_STATUS, END_DATE;

-- Count of subscriptions per product
SELECT
    P.NAME AS PRODUCT_NAME,
    COUNT(*) AS SUBSCRIPTION_COUNT
FROM
    PRODUCT P
JOIN
    SUBSCRIPTION S ON P.PRODUCT_ID = S.PRODUCT_ID
GROUP BY
    P.NAME;

-- Count of subscriptions per product and subscription status
SELECT
    P.NAME AS PRODUCT_NAME,
    S.SUBS_STATUS,
    COUNT(*) AS SUBSCRIPTION_COUNT
FROM
    PRODUCT P
JOIN
    SUBSCRIPTION S ON P.PRODUCT_ID = S.PRODUCT_ID
GROUP BY
    P.NAME, S.SUBS_STATUS;


-- Retrieve subscription details along with user name, product name, and pricing category name
SELECT
    SUB.END_DATE,
    SUB.START_DATE,
    SUB.LAST_UPDATE,
    SUB.SUBS_STATUS,
    SUB.SUBSCRIPTION_ID,
    PC.NAME AS PRICING_CATEGORY,
    PR.NAME AS PRODUCT,
    USR.NAME AS USER_NAME
FROM
    SUBSCRIPTION SUB
JOIN
    PRICING_CATEGORY PC ON SUB.PRICING_CATEGORY_ID = PC.PRICING_CATEGORY_ID
JOIN
    PRODUCT PR ON SUB.PRODUCT_ID = PR.PRODUCT_ID
JOIN
    PINKUSER USR ON SUB.USER_ID = USR.USER_ID;

